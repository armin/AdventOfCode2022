import UIKit

var greeting = "Hello, playground"

var one =       ["S","Z","P","D","L","B","F","C",]
var two =       ["N","V","G","P","H","W","B",]
var three =     ["F","W","B","J","G",]
var four =      ["G","J","N","F","L","W","C","S"]
var five =      ["W","J","L","T","P","M","S","H",]
var six =       ["B","C","W","G","F","S",]
var seven =     ["H","T","P","M","Q","B","W",]
var eight =     ["F","S","W","T",]
var nine  =     ["N","C","R",]

var stackMap: [Int:[String]] = [
    1: one,
    2: two,
    3: three,
    4: four,
    5: five,
    6: six,
    7: seven,
    8: eight,
    9: nine,
]


func move9001(_ number: Int, _ from: Int , _ to: Int) {
    var fromStack = stackMap[from]!
    let last = fromStack.count - 1
    var start = (last - number)
    let chunk = fromStack[(start + 1)...last]
    fromStack = start < 0 ? [] : Array(fromStack[0...start])
    
    var toStack = stackMap[to]!
    toStack = toStack + Array(chunk)
    
    stackMap[from] = fromStack
    stackMap[to] = toStack
}

func move9000(_ number: Int, _ from: Int , _ to: Int) {
    var fromStack = stackMap[from]!
    let last = fromStack.count - 1
    var start = (last - number)
    let chunk = fromStack[(start + 1)...last].reversed()
    fromStack = start < 0 ? [] : Array(fromStack[0...start])
    
    var toStack = stackMap[to]!
    toStack = toStack + Array(chunk)
    
    stackMap[from] = fromStack
    stackMap[to] = toStack
}

func move(_ number: Int, _ from: Int , _ to: Int) {
    move9001(number, from, to)
}

let initialStackMap = stackMap

printStack(number: 1, map:  stackMap)
printStack(number: 2, map:  stackMap)
printStack(number: 3, map:  stackMap)
printStack(number: 4, map:  stackMap)
printStack(number: 5, map:  stackMap)
printStack(number: 6, map:  stackMap)
printStack(number: 7, map:  stackMap)
printStack(number: 8, map:  stackMap)
printStack(number: 9, map:  stackMap)
print("\n")

runMoves()

printStack(number: 1, map:  stackMap)
printStack(number: 2, map:  stackMap)
printStack(number: 3, map:  stackMap)
printStack(number: 4, map:  stackMap)
printStack(number: 5, map:  stackMap)
printStack(number: 6, map:  stackMap)
printStack(number: 7, map:  stackMap)
printStack(number: 8, map:  stackMap)
printStack(number: 9, map:  stackMap)

printCrateAtEnd()

func printStack(number: Int, map: [Int:[String]]) {
    print("\(number) \(String(describing: map[number]))")
}

func printCrateAtEnd() {
    var result = ""
    for i in (1...9) {
        let stack = stackMap[i]!
        result = result + "\( stack.last ?? "")"
    }
    print(result)
}

func runMoves() {
    move(2 ,5 ,9)
    move(3 ,1 ,7)
    move(2 ,3 ,9)
    move(6 ,9 ,5)
    move(2 ,3 ,8)
    move(9 ,7 ,8)
    move(15 ,8 ,9)
    move(3 ,1 ,6)
    move(6 ,4 ,2)
    move(6 ,5 ,6)
    move(1 ,4 ,2)
    move(14 ,6 ,2)
    move(2 ,1 ,5)
    move(1 ,7 ,3)
    move(1 ,4 ,8)
    move(2 ,5 ,6)
    move(25 ,2 ,4)
    move(2 ,6 ,4)
    move(1 ,8 ,1)
    move(2 ,9 ,1)
    move(1 ,6 ,1)
    move(2 ,1 ,7)
    move(1 ,7 ,3)
    move(2 ,1 ,8)
    move(1 ,2 ,6)
    move(1 ,3 ,8)
    move(4 ,5 ,6)
    move(1 ,5 ,3)
    move(1 ,9 ,6)
    move(2 ,3 ,4)
    move(1 ,2 ,6)
    move(12 ,9 ,7)
    move(1 ,9 ,1)
    move(1 ,5 ,8)
    move(1 ,3 ,8)
    move(28 ,4 ,5)
    move(1 ,4 ,3)
    move(1 ,2 ,6)
    move(1 ,3 ,9)
    move(12 ,7 ,2)
    move(1 ,9 ,6)
    move(6 ,6 ,4)
    move(1 ,7 ,4)
    move(1 ,1 ,2)
    move(28 ,5 ,1)
    move(2 ,2 ,8)
    move(3 ,8 ,2)
    move(7 ,4 ,1)
    move(4 ,8 ,6)
    move(9 ,2 ,8)
    move(7 ,6 ,5)
    move(3 ,5 ,9)
    move(1 ,9 ,7)
    move(1 ,7 ,1)
    move(5 ,8 ,4)
    move(4 ,1 ,9)
    move(6 ,9 ,4)
    move(5 ,1 ,5)
    move(5 ,2 ,3)
    move(4 ,8 ,2)
    move(5 ,1 ,4)
    move(4 ,5 ,9)
    move(9 ,4 ,9)
    move(10 ,9 ,8)
    move(1 ,9 ,1)
    move(2 ,2 ,8)
    move(4 ,3 ,8)
    move(1 ,2 ,3)
    move(2 ,9 ,2)
    move(1 ,2 ,6)
    move(4 ,4 ,3)
    move(3 ,5 ,1)
    move(12 ,1 ,4)
    move(1 ,5 ,3)
    move(1 ,5 ,3)
    move(5 ,8 ,5)
    move(7 ,8 ,5)
    move(8 ,3 ,4)
    move(1 ,5 ,1)
    move(1 ,6 ,7)
    move(2 ,1 ,6)
    move(8 ,5 ,9)
    move(2 ,5 ,1)
    move(9 ,1 ,4)
    move(20 ,4 ,2)
    move(1 ,5 ,2)
    move(4 ,4 ,2)
    move(5 ,9 ,2)
    move(2 ,8 ,9)
    move(23 ,2 ,4)
    move(2 ,2 ,5)
    move(5 ,1 ,2)
    move(28 ,4 ,3)
    move(2 ,8 ,1)
    move(2 ,5 ,7)
    move(1 ,6 ,9)
    move(1 ,4 ,8)
    move(1 ,8 ,9)
    move(1 ,4 ,6)
    move(2 ,7 ,2)
    move(13 ,3 ,4)
    move(5 ,9 ,7)
    move(1 ,9 ,6)
    move(14 ,2 ,6)
    move(1 ,4 ,1)
    move(10 ,3 ,2)
    move(1 ,6 ,9)
    move(2 ,3 ,2)
    move(3 ,1 ,9)
    move(1 ,3 ,5)
    move(3 ,9 ,3)
    move(6 ,7 ,4)
    move(1 ,9 ,4)
    move(1 ,9 ,2)
    move(1 ,5 ,3)
    move(5 ,3 ,1)
    move(17 ,4 ,7)
    move(2 ,2 ,8)
    move(1 ,3 ,9)
    move(1 ,8 ,2)
    move(1 ,9 ,6)
    move(4 ,6 ,2)
    move(10 ,6 ,5)
    move(4 ,1 ,5)
    move(15 ,2 ,9)
    move(1 ,8 ,6)
    move(1 ,2 ,8)
    move(6 ,9 ,2)
    move(3 ,4 ,8)
    move(11 ,7 ,1)
    move(6 ,9 ,6)
    move(1 ,6 ,2)
    move(3 ,9 ,3)
    move(6 ,2 ,7)
    move(6 ,7 ,8)
    move(7 ,1 ,9)
    move(4 ,1 ,6)
    move(2 ,1 ,2)
    move(4 ,6 ,7)
    move(1 ,2 ,9)
    move(1 ,2 ,3)
    move(1 ,2 ,1)
    move(6 ,8 ,4)
    move(2 ,6 ,7)
    move(13 ,5 ,9)
    move(1 ,5 ,4)
    move(3 ,4 ,7)
    move(1 ,1 ,7)
    move(14 ,9 ,2)
    move(2 ,9 ,3)
    move(3 ,8 ,5)
    move(4 ,3 ,4)
    move(8 ,4 ,1)
    move(7 ,1 ,9)
    move(5 ,6 ,9)
    move(4 ,9 ,2)
    move(1 ,1 ,9)
    move(17 ,2 ,4)
    move(1 ,6 ,3)
    move(4 ,7 ,5)
    move(5 ,7 ,5)
    move(1 ,6 ,4)
    move(1 ,8 ,3)
    move(5 ,7 ,1)
    move(2 ,7 ,6)
    move(2 ,3 ,6)
    move(1 ,2 ,9)
    move(7 ,9 ,6)
    move(2 ,3 ,7)
    move(8 ,6 ,4)
    move(3 ,9 ,2)
    move(1 ,6 ,4)
    move(26 ,4 ,8)
    move(2 ,7 ,8)
    move(5 ,5 ,9)
    move(2 ,6 ,7)
    move(4 ,9 ,1)
    move(2 ,7 ,5)
    move(14 ,8 ,6)
    move(3 ,2 ,8)
    move(3 ,6 ,8)
    move(3 ,6 ,1)
    move(10 ,8 ,4)
    move(5 ,9 ,4)
    move(3 ,8 ,5)
    move(1 ,8 ,2)
    move(12 ,4 ,8)
    move(1 ,9 ,3)
    move(6 ,6 ,4)
    move(6 ,8 ,2)
    move(1 ,3 ,8)
    move(1 ,8 ,4)
    move(10 ,1 ,9)
    move(2 ,1 ,3)
    move(7 ,4 ,9)
    move(1 ,2 ,1)
    move(11 ,8 ,9)
    move(1 ,3 ,9)
    move(2 ,2 ,7)
    move(1 ,3 ,6)
    move(2 ,7 ,9)
    move(2 ,4 ,6)
    move(4 ,6 ,4)
    move(2 ,2 ,8)
    move(2 ,8 ,4)
    move(1 ,1 ,7)
    move(2 ,2 ,8)
    move(9 ,5 ,2)
    move(3 ,5 ,9)
    move(1 ,8 ,3)
    move(30 ,9 ,7)
    move(1 ,6 ,2)
    move(7 ,4 ,8)
    move(13 ,7 ,2)
    move(8 ,7 ,4)
    move(2 ,4 ,8)
    move(8 ,8 ,1)
    move(1 ,8 ,3)
    move(2 ,8 ,9)
    move(1 ,3 ,7)
    move(5 ,7 ,6)
    move(1 ,3 ,1)
    move(7 ,4 ,8)
    move(20 ,2 ,6)
    move(2 ,2 ,7)
    move(1 ,9 ,5)
    move(4 ,7 ,6)
    move(3 ,7 ,8)
    move(1 ,7 ,2)
    move(7 ,8 ,6)
    move(3 ,6 ,7)
    move(4 ,9 ,1)
    move(1 ,2 ,6)
    move(1 ,9 ,7)
    move(1 ,2 ,8)
    move(1 ,7 ,6)
    move(3 ,6 ,3)
    move(4 ,8 ,1)
    move(8 ,6 ,4)
    move(3 ,7 ,2)
    move(1 ,3 ,2)
    move(1 ,4 ,5)
    move(2 ,3 ,5)
    move(1 ,4 ,6)
    move(4 ,1 ,5)
    move(4 ,2 ,9)
    move(2 ,1 ,6)
    move(4 ,9 ,2)
    move(3 ,2 ,8)
    move(2 ,8 ,4)
    move(13 ,6 ,1)
    move(4 ,5 ,2)
    move(14 ,6 ,3)
    move(1 ,2 ,7)
    move(2 ,2 ,4)
    move(1 ,8 ,6)
    move(1 ,6 ,3)
    move(1 ,7 ,4)
    move(1 ,2 ,3)
    move(1 ,2 ,6)
    move(11 ,4 ,6)
    move(2 ,5 ,4)
    move(1 ,5 ,6)
    move(12 ,3 ,6)
    move(1 ,3 ,7)
    move(1 ,5 ,7)
    move(3 ,3 ,6)
    move(2 ,7 ,5)
    move(2 ,5 ,2)
    move(8 ,6 ,7)
    move(24 ,1 ,3)
    move(1 ,4 ,6)
    move(10 ,3 ,1)
    move(6 ,1 ,8)
    move(1 ,6 ,3)
    move(1 ,4 ,2)
    move(1 ,3 ,1)
    move(2 ,2 ,1)
    move(1 ,7 ,6)
    move(2 ,7 ,5)
    move(4 ,3 ,7)
    move(1 ,2 ,3)
    move(6 ,1 ,6)
    move(3 ,7 ,5)
    move(4 ,7 ,8)
    move(1 ,1 ,2)
    move(1 ,2 ,7)
    move(8 ,3 ,4)
    move(3 ,4 ,7)
    move(6 ,8 ,6)
    move(2 ,3 ,2)
    move(1 ,3 ,9)
    move(5 ,5 ,1)
    move(2 ,8 ,2)
    move(1 ,9 ,2)
    move(4 ,1 ,3)
    move(3 ,2 ,9)
    move(1 ,1 ,2)
    move(2 ,9 ,7)
    move(2 ,2 ,9)
    move(8 ,7 ,5)
    move(33 ,6 ,5)
    move(20 ,5 ,9)
    move(21 ,5 ,7)
    move(17 ,7 ,6)
    move(10 ,6 ,9)
    move(5 ,4 ,7)
    move(2 ,3 ,9)
    move(1 ,2 ,3)
    move(2 ,7 ,3)
    move(3 ,9 ,5)
    move(23 ,9 ,7)
    move(8 ,9 ,6)
    move(1 ,9 ,1)
    move(1 ,5 ,3)
    move(1 ,8 ,9)
    move(5 ,6 ,8)
    move(1 ,9 ,6)
    move(18 ,7 ,2)
    move(6 ,7 ,4)
    move(6 ,4 ,8)
    move(5 ,7 ,4)
    move(6 ,6 ,3)
    move(1 ,4 ,2)
    move(10 ,2 ,1)
    move(1 ,2 ,4)
    move(7 ,1 ,6)
    move(1 ,7 ,1)
    move(11 ,6 ,2)
    move(1 ,6 ,8)
    move(12 ,3 ,1)
    move(8 ,1 ,8)
    move(2 ,5 ,2)
    move(12 ,8 ,6)
    move(15 ,2 ,4)
    move(7 ,4 ,5)
    move(4 ,5 ,9)
    move(4 ,9 ,4)
    move(5 ,4 ,6)
    move(2 ,5 ,2)
    move(1 ,2 ,5)
    move(2 ,5 ,4)
    move(2 ,1 ,3)
    move(4 ,1 ,5)
    move(2 ,8 ,4)
    move(5 ,2 ,9)
    move(17 ,6 ,8)
    move(1 ,3 ,2)
    move(2 ,5 ,4)
    move(1 ,3 ,8)
    move(1 ,1 ,6)
    move(2 ,5 ,6)
    move(3 ,9 ,5)
    move(1 ,5 ,1)
    move(3 ,1 ,8)
    move(26 ,8 ,4)
    move(1 ,5 ,3)
    move(3 ,2 ,7)
    move(1 ,5 ,7)
    move(21 ,4 ,9)
    move(19 ,4 ,5)
    move(3 ,4 ,3)
    move(2 ,7 ,5)
    move(1 ,8 ,2)
    move(1 ,6 ,2)
    move(1 ,8 ,9)
    move(1 ,6 ,7)
    move(1 ,2 ,4)
    move(1 ,4 ,7)
    move(1 ,2 ,7)
    move(1 ,7 ,1)
    move(1 ,1 ,6)
    move(1 ,3 ,5)
    move(2 ,6 ,3)
    move(13 ,5 ,8)
    move(1 ,4 ,2)
    move(3 ,5 ,4)
    move(5 ,5 ,4)
    move(5 ,8 ,9)
    move(9 ,9 ,3)
    move(2 ,7 ,1)
    move(6 ,4 ,2)
    move(8 ,9 ,4)
    move(1 ,2 ,7)
    move(12 ,9 ,8)
    move(1 ,4 ,2)
    move(3 ,7 ,3)
    move(11 ,8 ,5)
    move(5 ,8 ,6)
    move(3 ,6 ,5)
    move(2 ,4 ,1)
    move(13 ,5 ,3)
    move(1 ,1 ,7)
    move(2 ,1 ,8)
    move(3 ,4 ,9)
    move(1 ,1 ,7)
    move(1 ,2 ,4)
    move(2 ,7 ,3)
    move(1 ,5 ,3)
    move(4 ,4 ,2)
    move(1 ,4 ,9)
    move(30 ,3 ,2)
    move(1 ,9 ,7)
    move(6 ,8 ,6)
    move(1 ,7 ,6)
    move(1 ,5 ,1)
    move(1 ,3 ,5)
    move(30 ,2 ,3)
    move(1 ,1 ,9)
    move(2 ,9 ,2)
    move(9 ,6 ,9)
    move(2 ,2 ,9)
    move(1 ,5 ,1)
    move(5 ,9 ,7)
    move(8 ,2 ,5)
    move(1 ,1 ,9)
    move(3 ,9 ,1)
    move(5 ,3 ,6)
    move(8 ,5 ,9)
    move(13 ,3 ,9)
    move(3 ,1 ,7)
    move(5 ,7 ,9)
    move(17 ,9 ,6)
    move(1 ,7 ,6)
    move(6 ,3 ,9)
    move(1 ,2 ,1)
    move(2 ,7 ,1)
    move(1 ,2 ,5)
    move(21 ,9 ,2)
    move(4 ,3 ,6)
    move(6 ,6 ,5)
    move(7 ,5 ,9)
    move(2 ,3 ,8)
    move(3 ,1 ,3)
    move(4 ,6 ,5)
    move(1 ,8 ,1)
    move(1 ,8 ,2)
    move(4 ,5 ,2)
    move(4 ,9 ,1)
    move(4 ,3 ,5)
    move(2 ,1 ,7)
    move(1 ,7 ,4)
    move(3 ,9 ,5)
    move(25 ,2 ,9)
    move(18 ,9 ,1)
    move(1 ,4 ,5)
    move(1 ,3 ,8)
    move(4 ,5 ,6)
    move(2 ,9 ,3)
    move(17 ,1 ,5)
    move(1 ,2 ,7)
    move(2 ,3 ,5)
    move(3 ,1 ,8)
    move(5 ,9 ,2)
    move(4 ,8 ,9)
    move(12 ,5 ,2)
    move(1 ,1 ,8)
    move(3 ,9 ,5)
    move(1 ,8 ,2)
    move(2 ,7 ,2)
    move(1 ,9 ,5)
    move(9 ,5 ,2)
    move(6 ,6 ,2)
    move(15 ,6 ,2)
    move(5 ,5 ,9)
    move(1 ,5 ,9)
    move(3 ,9 ,2)
    move(3 ,9 ,1)
    move(1 ,1 ,9)
    move(1 ,9 ,1)
    move(19 ,2 ,8)
    move(2 ,1 ,9)
    move(33 ,2 ,6)
    move(4 ,6 ,4)
    move(1 ,2 ,6)
    move(1 ,9 ,8)
    move(3 ,4 ,8)
    move(18 ,8 ,3)
    move(1 ,4 ,9)
    move(10 ,3 ,9)
    move(1 ,1 ,4)
    move(24 ,6 ,3)
    move(1 ,4 ,3)
    move(2 ,8 ,7)
    move(8 ,9 ,3)
    move(5 ,6 ,7)
    move(35 ,3 ,2)
    move(7 ,7 ,1)
    move(3 ,1 ,3)
    move(33 ,2 ,6)
    move(6 ,3 ,7)
    move(5 ,7 ,3)
    move(1 ,1 ,4)
    move(1 ,7 ,8)
    move(1 ,4 ,8)
    move(1 ,3 ,2)
    move(30 ,6 ,5)
    move(2 ,1 ,6)
    move(5 ,8 ,1)
    move(1 ,9 ,2)
    move(2 ,6 ,4)
    move(4 ,1 ,7)
    move(21 ,5 ,8)
}
